CREATE TABLE recommendation (
    list_id INTEGER NOT NULL DEFAULT -1,
    movie_id INTEGER,
    show_id INTEGER,
    created_at INTEGER NOT NULL DEFAULT 0,
    PRIMARY KEY (list_id, movie_id, show_id),
    FOREIGN KEY (movie_id) REFERENCES movie(id) ON DELETE CASCADE,
    FOREIGN KEY (show_id) REFERENCES show(id) ON DELETE CASCADE
);

insert:
INSERT OR IGNORE INTO recommendation(list_id, movie_id, show_id, created_at)
VALUES (:listId,:movieId, :showId, strftime('%s', 'now'));

deleteFromList:
DELETE FROM recommendation WHERE list_id = :listId AND movie_id = :movieId AND show_id = :showId;

clearByListId:
DELETE FROM recommendation WHERE list_id = :id;

selectRecommendationContentByListId:
SELECT DISTINCT
     recommendation.movie_id AS movieId,
     recommendation.show_id AS showId,
     COALESCE(m.title, s.title) AS title,
     COALESCE(m.poster_url, s.poster_url) AS posterUrl,
     COALESCE(m.poster_last_updated, s.poster_last_updated) AS posterLastUpdated,
     COALESCE(m.favorite, s.favorite) AS favorite,
     COALESCE(m.overview, s.overview) AS overview,
     COALESCE(m.popularity, s.popularity) AS popularity,
     COALESCE(m.last_modified_at, s.last_modified_at) AS lastModified
FROM recommendation
LEFT JOIN movie AS m ON recommendation.movie_id = m.id
LEFT JOIN show AS s ON recommendation.show_id = s.id
WHERE recommendation.list_id = :id
ORDER BY created_at DESC;

selectRecommendationsChangedAt:
SELECT created_at FROM recommendation WHERE list_id = :id ORDER BY created_at DESC LIMIT 1;